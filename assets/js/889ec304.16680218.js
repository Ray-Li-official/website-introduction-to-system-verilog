"use strict";(self.webpackChunkwebsite_introduction_to_system_verilog=self.webpackChunkwebsite_introduction_to_system_verilog||[]).push([[6989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6264:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},i="Module Basic",l={unversionedId:"module-basic",id:"module-basic",title:"Module Basic",description:"Module Anatomy",source:"@site/docs/4-module-basic.md",sourceDirName:".",slug:"/module-basic",permalink:"/website-introduction-to-system-verilog/docs/module-basic",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/4-module-basic.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Abstraction Levels",permalink:"/website-introduction-to-system-verilog/docs/abstraction-level"},next:{title:"Tutorial - Extras",permalink:"/website-introduction-to-system-verilog/docs/category/tutorial---extras"}},s={},c=[{value:"Module Anatomy",id:"module-anatomy",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"module-basic"},"Module Basic"),(0,o.kt)("h2",{id:"module-anatomy"},"Module Anatomy"),(0,o.kt)("p",null,"A module in SystemVerilog is a container that inputs and outputs some values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Module ",(0,o.kt)("strong",{parentName:"li"},"start")," and ",(0,o.kt)("strong",{parentName:"li"},"end")," declaration."),(0,o.kt)("li",{parentName:"ul"},"Optional ",(0,o.kt)("strong",{parentName:"li"},"parameter")," lists."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Ports")," declaration with ",(0,o.kt)("strong",{parentName:"li"},"direction"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Local Variables"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Statements")," that defines functionality and timing."),(0,o.kt)("li",{parentName:"ul"},"Instances of other ",(0,o.kt)("strong",{parentName:"li"},"modules"),".(yes, you can use modules inside module)")),(0,o.kt)("h2",{id:""}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-verilog"},"module example_4_1_counter //module start\n    #(parameter WIDTH=4) // Parameter declaration\n    (\n        input logic clk,\n        input logic clear,\n        output logic [WIDTH-1:0] count\n    );\n\nlogic[WIDTH-1:0] cnt; // Local variable declaration\n\n// Statements that defines functionality and timing.\nalways @(posedge clk or posedge clear)\n begin\n if (clear == 1)\n cnt = 0;\n else\n cnt = cnt + 1;\n end\n\n assign count = cnt;\n\nendmodule: counter //module end\n")))}d.isMDXComponent=!0}}]);